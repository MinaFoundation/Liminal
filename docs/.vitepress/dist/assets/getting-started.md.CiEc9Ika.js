import{_ as i,c as s,o as a,a8 as e}from"./chunks/framework.FpFchv4Q.js";const u=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{"prev":{"text":"Overview","link":"/"},"next":{"text":"Values","link":"/values"}},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md","lastUpdated":1718207870000}'),t={name:"getting-started.md"},l=e(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="lifecycle" tabindex="-1">Lifecycle <a class="header-anchor" href="#lifecycle" aria-label="Permalink to &quot;Lifecycle&quot;">​</a></h2><p>Let&#39;s briefly touch on the Liminal usage lifecycle at a high level.</p><ol><li>We declare state and functions.</li><li>We create transactions that deploy and/or utilize pre-deployed functions.</li><li>We can generate and deploy migrations.</li></ol><p>During development, we may also use Liminal to test contracts against an ephemeral network, but more on this <a href="/testing">later</a>.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eT9gb" id="tab-NVcFdqh" checked><label for="tab-NVcFdqh">Node.js</label><input type="radio" name="group-eT9gb" id="tab-UStV1XF"><label for="tab-UStV1XF">Deno</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liminal</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jsr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mina/liminal</span></span></code></pre></div></div></div><h2 id="node-js-specifics" tabindex="-1">Node.js-specifics <a class="header-anchor" href="#node-js-specifics" aria-label="Permalink to &quot;Node.js-specifics&quot;">​</a></h2><h3 id="use-modules" tabindex="-1">Use Modules <a class="header-anchor" href="#use-modules" aria-label="Permalink to &quot;Use Modules&quot;">​</a></h3><p>Liminal&#39;s NPM package does not contain a CommonJS build; only ESModules are supported. Therefore, we must specify the <code>package.json</code> <code>type</code> field as <code>&quot;module&quot;</code>.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ &quot;type&quot;: &quot;module&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="tsconfig-json-fields" tabindex="-1"><code>tsconfig.json</code> Fields <a class="header-anchor" href="#tsconfig-json-fields" aria-label="Permalink to &quot;\`tsconfig.json\` Fields&quot;">​</a></h3><p>Ensure that you&#39;ve configured module resolution to support <code>package.json</code> <code>exports</code>.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ &quot;module&quot;: &quot;ESNext&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="shim-web-crypto-api" tabindex="-1">Shim Web Crypto API <a class="header-anchor" href="#shim-web-crypto-api" aria-label="Permalink to &quot;Shim Web Crypto API&quot;">​</a></h3><p>Liminal uses the standard <a href="https://nodejs.org/docs/latest-v20.x/api/webcrypto.html#web-crypto-api" target="_blank" rel="noreferrer">Web Crypto API</a> (Node v20.3.1 and above). To use Liminal in previous major versions of Node, you can shim <code>globalThis.crypto</code> as follows.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalThis.crypto </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node:crypto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).webcrypto</span></span></code></pre></div><h2 id="cli-usage" tabindex="-1">CLI Usage <a class="header-anchor" href="#cli-usage" aria-label="Permalink to &quot;CLI Usage&quot;">​</a></h2><p>You may want to add Liminal to your scripts/tasks for convenience.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1LPSs" id="tab-OOsfckH" checked><label for="tab-OOsfckH">Node.js</label><input type="radio" name="group-1LPSs" id="tab-1IeDGhc"><label for="tab-1IeDGhc">Deno</label></div><div class="blocks"><div class="language-diff vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   &quot;liminal&quot;: &quot;liminal&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;tasks&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   &quot;liminal&quot;: &quot;deno run -r -A https://deno.land/x/liminal/main.ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>This simplifies interacting with the Liminal CLI.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bAMx9" id="tab-MctdAm3" checked><label for="tab-MctdAm3">Node.js</label><input type="radio" name="group-bAMx9" id="tab-x5_YM92"><label for="tab-x5_YM92">Deno</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liminal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liminal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div></div></div><h2 id="namespace-importing-liminal" tabindex="-1">Namespace-importing Liminal <a class="header-anchor" href="#namespace-importing-liminal" aria-label="Permalink to &quot;Namespace-importing Liminal&quot;">​</a></h2><p>Throughout the remainder of this documentation, we&#39;ll refer to the Liminal namespace as <code>L</code>. In practice, this means namespace-importing Liminal in your modules like so.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;liminal&quot;</span></span></code></pre></div>`,25),n=[l];function h(p,d,o,r,k,c){return a(),s("div",null,n)}const b=i(t,[["render",h]]);export{u as __pageData,b as default};
